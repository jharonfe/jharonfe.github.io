{"version":3,"sources":["QueryResource.js","Loader.js","BottomMenu.js","App.js","serviceWorker.js","index.js"],"names":["QueryResource","this","queries","SourceDevto","map","x","SourceHackerNews","SourceStackExchange","SourceSubreddit","Promise","allSettled","a","query","response","process","createItem","source","title","link","author","score","date","miscellaneous","zScore","arr","mean","reduce","gross","length","stdev","Math","sqrt","pow","b","path","take","promises","data","forEach","storyID","i","push","axios","get","all","storyResponses","storyResponse","url","id","by","Date","time","subreddit","children","ups","downs","item","permalink","created","public_reactions_count","user","name","created_at","tags","description","site","items","view_count","owner","display_name","creation_date","SpinAnimation","keyframes","StyledLoader","styled","div","p","theme","highlightColor","Loader","React","Component","height","topbarBackColor","CloseButton","viewBackColor","BottomMenu","props","element","createRef","onClick","bind","window","addEventListener","onClose","prevProps","isOpen","document","removeEventListener","event","contains","target","stopImmediatePropagation","componentProps","ref","el","closeProps","menuBody","textColor","cardBackColor","borderColor","Topbar","View","Body","List","ul","Card","li","isSelected","TopbarLayout","Button","button","TextWrap","CardInfo","CardScore","CardDate","CardSource","CardBody","MenuBody","MenuHeader","h3","MenuLayout","MenuItem","App","onKeyDown","onScroll","scrollTo","body","resource","increment","state","results","selectedIndex","isMenuOpen","similar","then","flatten","result","status","concat","value","console","error","reason","setState","filter","sort","y","current","catch","err","key","shuffle","min","max","open","selected","findIndex","stringSimilarity","compareTwoStrings","index","scrollHeight","innerHeight","scrollTop","array","temporaryValue","randomIndex","currentIndex","floor","random","viewProps","isVisible","sortProps","dateProps","randomProps","topbarProps","bodyProps","similarProps","slice","itemProps","cardProps","infoProps","sourceProps","scoreProps","toLocaleString","textProps","dangerouslySetInnerHTML","__html","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.35775f21.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class QueryResource {\n    constructor() {\n        this.queries = [\n            new SourceDevto(200),\n            // ...[\n            //     [\"javascript\"],\n            //     [\"typescript\"],\n            //     [\"shell\"],\n            //     [\"go\"],\n            //     [\"css\"],\n            //     [\"html\"],\n            //     [\"c%23\", \"csharp\"],\n            //     [\"c%2Bc%2B\", \"c++\"],\n            //     [\"python\"],\n            // ].map(x => new SourceGithub(...x)),\n            ...[\n                [\"topstories\", 300],\n                [\"askstories\", 200],\n                [\"showstories\", 200],\n            ].map(x => new SourceHackerNews(...x)),\n            ...[\n                \"stackoverflow\",\n                \"serverfault\",\n                \"superuser\",\n                \"webapps\",\n                \"askubuntu\",\n                \"unix\",\n                \"stats\",\n                \"opendata\",\n                \"chess\",\n                \"dsp\",\n                \"parenting\",\n                \"quant\",\n            ].map(x => new SourceStackExchange(x)),\n            ...[\n                \"r/appideas\",\n                \"r/bash\",\n                \"r/bashtricks\",\n                \"r/commandline\",\n                \"r/coolgithubprojects\",\n                \"r/cpp\",\n                \"r/csharp\",\n                \"r/css\",\n                \"r/dataisbeautiful\",\n                \"r/datascience\",\n                \"r/datasets\",\n                \"r/docker\",\n                \"r/dotnet\",\n                \"r/lightbulb\",\n                \"r/linux\",\n                \"r/mlpapers\",\n                \"r/node\",\n                \"r/programming\",\n                \"r/python\",\n                \"r/raspberry_pi\",\n                \"r/raspberry_pi_projects\",\n                \"r/reactjs\",\n                \"r/Showerthoughts\",\n                \"r/sideproject\",\n                \"r/somebodymakethis\",\n                \"r/startup_ideas\",\n                \"r/startups\",\n                \"r/typescript\",\n                \"r/vim\",\n                \"r/vscode\"\n            ].map(x => new SourceSubreddit(x))\n        ];\n    }\n\n    async query() {\n        return await Promise.allSettled(this.queries.map(async (x) => {\n            const response = await x.query();\n            return await x.process(response);\n        }));\n    }\n}\n\nfunction createItem(source, title, link, author, score, date, miscellaneous = \"\") {\n    return {\n        source: source,\n        title: title,\n        link: link,\n        author: author,\n        score: score,\n        date: date,\n        miscellaneous: miscellaneous\n    };\n}\n\nfunction zScore(arr) {\n    const mean = arr.reduce((gross, x) => gross + x, 0) / arr.length;\n    const stdev = Math.sqrt(arr.map(x => Math.pow(x - mean , 2)).reduce((a, b) =>  a + b) / arr.length);\n    return [mean, stdev];\n}\n\nclass SourceHackerNews {\n    constructor(path, take) {\n        this.path = path;\n        this.take = take;\n    }\n\n    async process(response) {\n        const promises = [];\n        response.data.forEach((storyID, i) => {\n            if (i < this.take) {\n                promises.push(axios.get(`https://hacker-news.firebaseio.com/v0/item/${storyID}.json`));\n            }\n        });\n        const storyResponses = await Promise.all(promises);\n        const [mean, stdev] = zScore(storyResponses.map(x => x.data.score));\n        return storyResponses.map(storyResponse => {\n            return createItem(\n                `hn/${this.path}`,\n                storyResponse.data.title,\n                storyResponse.data.url ?? `https://news.ycombinator.com/item?id=${storyResponse.data.id}`,\n                storyResponse.data.by, \n                (storyResponse.data.score - mean) / stdev, \n                new Date(storyResponse.data.time * 1e3), \n                `<br/>score: ${storyResponse.data.score}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://hacker-news.firebaseio.com/v0/${this.path}.json`);\n    }\n}\n\nclass SourceGithub {\n    constructor(language, prettyName = null, startOffset = 5) {\n        this.language = language;\n        this.prettyName = prettyName;\n        this.startOffset = startOffset;\n    }\n\n    process(response) {\n        const [mean, stdev] = zScore(response.data.items.map(x => x.stargazers_count));\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.items.map((info) => {\n            return createItem(\n                `gh/${this.prettyName ?? this.language}`,\n                `${info.name}<br/>${info.description ?? \"\"}`,\n                info.html_url,\n                info.owner.login,\n                (info.stargazers_count - mean) / stdev,\n                date);\n        })\n    }\n\n    async query() {\n        const startDate = new Date();\n        startDate.setDate(startDate.getDate() - this.startOffset);\n        const dateFormat = `${startDate.getFullYear()}-${(startDate.getMonth() + 1).toString().padStart(2, \"0\")}-${startDate.getDate().toString().padStart(2, \"0\")}`;\n        return await axios.get(`https://api.github.com/search/repositories?q=created:>${dateFormat}+language:${this.language}&sort=stars&order=desc&per_page=25`, {\n            headers: {\n                Accept: \"application/vnd.github.preview\"\n            }\n        })\n    }\n}\n\nclass SourceSubreddit {\n    constructor(subreddit) {\n        this.subreddit = subreddit;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.data.children.map(x => x.data.ups - x.data.downs));\n        return response.data.data.children.map(item => {\n            return createItem(\n                this.subreddit,\n                item.data.title,\n                `https://www.reddit.com${item.data.permalink}`,\n                item.data.author,\n                ((item.data.ups - item.data.downs) - mean) / stdev, \n                new Date((item.data.created - 8 * 60 * 60) * 1e3), \n                `<br/>score: ${(item.data.ups - item.data.downs)}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://www.reddit.com/${this.subreddit}.json?limit=25`);\n    }\n}\n\nclass SourceDevto {\n    constructor(take) {\n        this.take = take;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.map(x => x.public_reactions_count));\n        return response.data.map(item => {\n            return createItem(\n                \"devto\", \n                item.title, \n                item.url, \n                item.user.name, \n                (item.public_reactions_count - mean) / stdev,\n                new Date(item.created_at),\n                `<br/>tags: ${item.tags}<br/>description: ${item.description}<br/>score: ${item.public_reactions_count}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://dev.to/api/articles?per_page=${this.take}`);\n    }\n}\n\nclass SourceStackExchange {\n    constructor(site) {\n        this.site = site;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.items.map(x => x.view_count));\n        return response.data.items.map(item => {\n            return createItem(\n                `stack/${this.site}`,\n                item.title,\n                item.link,\n                item.owner.display_name,\n                (item.view_count - mean) / stdev,\n                new Date(item.creation_date * 1e3));\n        })\n    }\n\n    async query() {\n        return await axios.get(`https://api.stackexchange.com/2.2/questions?sort=hot&site=${this.site}`);\n    }\n}","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst size = \"16px\";\nconst SpinAnimation = keyframes`\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    `,\n    StyledLoader = styled.div`\n        border: ${size} solid rgb(63, 63, 63);\n        border-top: ${size} solid ${p => p.theme.highlightColor};\n        border-radius: 50%;\n        width: calc(4 * ${size});\n        height: calc(4 * ${size});\n        animation: ${SpinAnimation} 2s linear infinite;\n        position: absolute;\n        top: calc(50% - 2 * ${size});\n        left: calc(50% - 2 * ${size});\n    `;\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <StyledLoader/>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Component = styled.div`\n    height: ${p => p.height};\n    min-width: 300px;\n    max-width: 500px;\n    z-index: 1;\n    margin: 0 auto;\n    border-radius: 16px 16px 0 0;\n    background-color: ${p => p.theme.topbarBackColor};\n    position: fixed;\n    bottom: 0;\n    transition: height 0.5s ease-in-out;\n    left: 50%;\n    transform: translateX(-50%) !important;\n    ${p => p.height !== 0 ? \"box-shadow: 0 0 0 2000px rgba(0, 0, 0, .5);\" : \"\"}\n  `,\n  CloseButton = styled.div`\n    text-decoration: none;\n    visibility: visible;\n    cursor: pointer;\n    float: right;\n    padding: 16px 16px 0 0;\n    right: 0;\n    position: absolute;\n    font-size: 1.5em;\n    color: ${p => p.theme.viewBackColor};\n\n    &:hover, &:focus {\n        font-weight: bold;\n    }\n  `;\nexport default class BottomMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n        this.onClick = this.onClick.bind(this);\n        window.addEventListener(\"scroll\", () => this.props.onClose());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isOpen !== prevProps.isOpen) {\n            if (this.props.isOpen) {\n                document.addEventListener(\"click\", this.onClick);\n            } else {\n                document.removeEventListener(\"click\", this.onClick);\n            }\n        }\n    }\n\n    onClick(event) {\n        if (this.props.isOpen && this.element && !this.element.contains(event.target)) {\n            this.props.onClose();\n            event.stopImmediatePropagation();\n        }\n    }\n\n    render() {\n        const componentProps = {\n                height: this.props.isOpen ? this.props.height : 0,\n                ref: el => this.element = el\n            },\n            closeProps = {\n                onClick: () => this.props.onClose(),\n                children: \"\\u00D7\"\n            };\n        return (\n            <Component {...componentProps}>\n                <CloseButton {...closeProps}/>\n                {this.props.menuBody}\n            </Component>\n        );\n    }\n}","import React from 'react';\nimport QueryResource from './QueryResource';\nimport Loader from './Loader';\nimport BottomMenu from './BottomMenu';\nimport styled, { ThemeProvider } from 'styled-components';\nimport stringSimilarity from 'string-similarity';\n\nconst theme = {\n        textColor: \"rgb(127, 127, 127)\",\n        topbarBackColor: \"rgb(29, 29, 29)\",\n        viewBackColor: \"rgb(210, 210, 210)\",\n        highlightColor: \"rgba(0, 255, 0, 0.5)\",\n        cardBackColor: \"rgb(255, 255, 255)\",\n        borderColor: \"rgb(232, 232, 232)\"\n    },\n    Topbar = styled.div`\n        height: 60px;\n        background-color: ${p => p.theme.topbarBackColor};\n    `,\n    View = styled.div`\n        height: 100vh;\n        background-color: ${p => p.theme.viewBackColor};\n    `,\n    Body = styled.div`\n        height: 100%;\n        height: calc(100% - 60px);\n        padding 0 16px;\n        overflow-y: scroll;\n    `,\n    List = styled.ul`\n        list-style-type: none;\n        padding: 0 16px;\n        height: 100%;\n    `,\n    Card = styled.li`\n        cursor: pointer;\n        color: ${p => p.theme.textColor};\n        height: 120px;\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: repeat(5, 1fr);\n        grid-template-areas: \n            \"info score\"\n            \"body body\"\n            \"body body\"\n            \"body body\"\n            \"source date\";\n        border: 1px solid ${p => p.theme.textColor};\n        margin: 8px auto;\n        font-size: 0.8em;\n        border-radius: 4px;\n        max-width: 500px;\n        background-color: ${p => p.isSelected ? p.theme.highlightColor : p.theme.cardBackColor};\n        transition: background-color 0.5s;\n\n        :hover {\n          background-color: ${p => p.theme.highlightColor};\n        }\n    `,\n    TopbarLayout = styled.div`\n        display: flex;\n        flex-flow: row;\n        align-items: center;\n        justify-content: space-evenly;\n    `,\n    Button = styled.button`\n        cursor: pointer;\n        font-size: 0.9rem;\n        padding: 0px;\n        height: 40px;\n        width: 100px;\n        margin: 10px 0px;\n        color: ${p => p.theme.textColor};\n        border: 1px solid ${p => p.theme.borderColor};\n        background-color: ${p => p.theme.cardBackColor};\n        border-radius: 4px;\n    `,\n    TextWrap = styled.div`\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    `,\n    CardInfo = styled(TextWrap)`\n        grid-area: info;\n        margin: 0px 8px;\n    `,\n    CardScore = styled(TextWrap)`\n        grid-area: score;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    CardDate = styled(TextWrap)`\n        grid-area: date;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    CardSource = styled(TextWrap)`\n        grid-area: source;\n        margin: 0px 8px;\n    `,\n    CardBody = styled.div`\n        grid-area: body;\n        text-align: center;\n        margin: 10px;\n        height: 3.6rem;\n        line-height: 1.2rem;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    `,\n    MenuBody = styled.div`\n        height: calc(100% - 40px);\n        margin: 32px 0 8px 0;\n    `,\n    MenuHeader = styled.h3`\n        margin: auto;\n        text-align: center;\n        height: 30px;\n        color: ${p => p.theme.viewBackColor};\n    `,\n    MenuLayout = styled.div`\n        display: grid;\n        grid-template-rows: repeat(5, 1fr);\n        grid-gap: 8px;\n        height: calc(100% - 30px);\n    `,\n    MenuItem = styled.div`\n        margin: auto 32px;\n        cursor: pointer;\n        text-align: center\n    `;\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.onKeyDown = this.onKeyDown.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.body = React.createRef();\n      this.resource = new QueryResource();\n      this.increment = 50;\n      this.state = {\n        results: [],\n        selectedIndex: -1,\n        isMenuOpen: false,\n        similar: []\n      };\n  }\n\n  componentDidMount() {\n      document.addEventListener(\"keydown\", this.onKeyDown);\n      this.resource.query()\n        .then(results => {\n          let flatten = [];\n          results.forEach(result => {\n            if (result.status === \"fulfilled\") {\n              flatten = flatten.concat(result.value);\n            } else if (result.status === \"rejected\") {\n              console.error(result.reason);\n            }\n          });\n          const maxHours = 1 * 24;\n          this.setState({\n            results: flatten.filter(x => ((new Date() - x.date) / 36e5) <= maxHours).sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }, () => this.body.current.addEventListener(\"scroll\", this.onScroll));\n        })\n        .catch(err => console.error(err));\n  }\n\n  onKeyDown(event) {\n    switch (event.key) {\n      case \"s\":\n          // sort score descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"d\":\n          // sort date descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.date <= y.date) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"r\":\n          // sort randomly\n          this.setState(state => ({\n            results: this.shuffle(state.results),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"i\":\n          this.setState({selectedIndex: 0}, () => this.scrollTo());\n          break;\n      case \"ArrowDown\":\n      case \"j\":\n          this.setState(state => ({selectedIndex: Math.min(state.selectedIndex + 1, state.results.length - 1)}), () => this.scrollTo());\n          break;\n      case \"ArrowUp\":\n      case \"k\":\n          this.setState(state => ({selectedIndex: Math.max(0, state.selectedIndex - 1)}), () => this.scrollTo());\n          break;\n      case \"Enter\":\n          if (this.state.selectedIndex > -1) {\n              window.open(this.state.results[this.state.selectedIndex].link);\n          }\n          break;\n      case \"c\":\n        if (!this.state.isMenuOpen) {\n            const selected = this.state.results[this.state.selectedIndex].title,\n              similar = this.state.results.reduce((arr, x, i) => {\n                  if (selected !== x.title && arr.findIndex(y => y.title === selected) < 0) {\n                    arr.push({\n                      score: stringSimilarity.compareTwoStrings(selected, x.title),\n                      index: i,\n                      title: x.title,\n                      link: x.link\n                    });\n                  }\n                  return arr;\n              }, []).sort((x, y) => x.score < y.score ? 1 : -1);\n            this.setState({ similar });\n        }\n        this.setState(state => ({isMenuOpen: !state.isMenuOpen}));\n        break;\n      case \"Escape\":\n        this.setState({isMenuOpen: false});\n        break;\n      default:\n          break;\n    }\n  }\n\n  onScroll(event) {\n      if (this.body.current.scrollHeight - (window.innerHeight + this.body.current.scrollTop) < 256) {\n          this.setState(state => ({selectedIndex: state.selectedIndex + this.increment}));\n      }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n      if (this.state.results.length === 0) {\n        return (\n          <ThemeProvider theme={theme}>\n              <Loader />\n          </ThemeProvider>\n        );\n      }\n      const viewProps = {\n          isVisible: !(this.state.results.length === 0)\n        },\n        sortProps = {\n          onClick: () => this.onKeyDown({ key: \"s\" })\n        },\n        dateProps = {\n          onClick: () => this.onKeyDown({ key: \"d\" })\n        },\n        randomProps = {\n          onClick: () => this.onKeyDown({ key: \"r\" })\n        },\n        topbarProps = {\n          children: (\n            <TopbarLayout>\n              <Button {...sortProps}>Score</Button>\n              <Button {...dateProps}>Date</Button>\n              <Button {...randomProps}>Random</Button>\n            </TopbarLayout>\n          )\n        },\n        bodyProps = {\n          ref: this.body\n        },\n        similarProps = {\n          isOpen: this.state.isMenuOpen,\n          onClose: () => this.setState({isMenuOpen: false}),\n          height: \"450px\",\n          menuBody: (\n            <MenuBody>\n              <MenuHeader>Similar</MenuHeader>\n              <MenuLayout>\n                  {this.state.similar.slice(0, 5).map((x, i) => {\n                        const itemProps = {\n                            key: i,\n                            children: x.title,\n                            onClick: () => window.open(x.link)\n                        };\n                    return (<MenuItem {...itemProps}/>);\n                  })}\n              </MenuLayout>\n            </MenuBody>\n          )\n        };\n        return (\n          <ThemeProvider theme={theme}>\n            <View {...viewProps}>\n              <Topbar {...topbarProps} />\n              <Body {...bodyProps}>\n                <List>\n                  {this.state.results.reduce((arr, result, i) => {\n                    if (i < (this.state.selectedIndex + this.increment)) {\n                      const cardProps = {\n                          key: i,\n                          isSelected: i === this.state.selectedIndex,\n                          onClick: () => window.open(result.link)\n                        },\n                        infoProps = {\n                          children: `${i} of ${this.state.results.length}`\n                        },\n                        sourceProps = {\n                          children: `${result.source}: ${result.author}`\n                        },\n                        scoreProps = {\n                          children: result.score.toLocaleString(\"en-US\")\n                        },\n                        dateProps = {\n                          children: `${(((new Date() - result.date)) / 36e5).toLocaleString(\"en-US\")} hours`\n                        },\n                        textProps = {\n                          dangerouslySetInnerHTML: {\n                            __html: `${result.title}`\n                          }\n                        }\n                      arr.push(\n                        <Card {...cardProps}>\n                          <CardInfo {...infoProps} />\n                          <CardSource {...sourceProps} />\n                          <CardScore {...scoreProps} />\n                          <CardDate {...dateProps} />\n                          <CardBody {...textProps} />\n                        </Card>\n                      );\n                    }\n                    return arr;\n                  }, [])}\n                </List>\n              </Body>\n              <BottomMenu {...similarProps}/>\n            </View>\n          </ThemeProvider>\n        );\n  }\n\n  scrollTo() {\n    this.body.current.scrollTo(0, Math.max(0, this.state.selectedIndex * (126) - 200));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}