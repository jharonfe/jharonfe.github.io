{"version":3,"sources":["QueryResource.js","Loader.js","App.js","serviceWorker.js","index.js"],"names":["QueryResource","this","queries","map","x","SourceGithub","SourceDevto","SourceHackerNews","SourceStackExchange","SourceSubreddit","Promise","allSettled","a","query","response","process","createItem","source","title","link","author","score","date","miscellaneous","zScore","arr","mean","reduce","gross","length","stdev","Math","sqrt","pow","b","path","take","promises","data","forEach","storyID","i","push","axios","get","all","storyResponses","storyResponse","url","id","by","Date","time","language","prettyName","items","stargazers_count","setHours","info","name","description","html_url","owner","login","startDate","setDate","getDate","dateFormat","getFullYear","getMonth","toString","padStart","headers","Accept","subreddit","children","ups","downs","item","created","public_reactions_count","user","created_at","tags","site","view_count","display_name","creation_date","SpinAnimation","keyframes","StyledLoader","styled","div","p","theme","highlightColor","Loader","React","Component","textColor","topbarBackColor","viewBackColor","cardBackColor","borderColor","Topbar","View","Body","List","ul","Card","li","isSelected","TopbarLayout","Button","button","TextWrap","CardInfo","CardScore","CardDate","CardSource","CardBody","App","props","onKeyDown","bind","onScroll","scrollTo","body","createRef","resource","increment","state","results","selectedIndex","document","addEventListener","then","flatten","result","status","concat","value","console","error","reason","setState","filter","sort","y","current","catch","err","event","key","shuffle","min","max","window","open","scrollHeight","innerHeight","scrollTop","array","temporaryValue","randomIndex","currentIndex","floor","random","viewProps","isVisible","sortProps","onClick","dateProps","randomProps","topbarProps","bodyProps","ref","cardProps","infoProps","sourceProps","scoreProps","toLocaleString","textProps","dangerouslySetInnerHTML","__html","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qTAEqBA,E,WACjB,aAAe,oBACXC,KAAKC,QAAL,sBACO,CACC,CAAC,cACD,CAAC,cACD,CAAC,SACD,CAAC,MACD,CAAC,OACD,CAAC,QACD,CAAC,OAAQ,UACT,CAAC,WAAY,OACb,CAAC,WACHC,KAAI,SAAAC,GAAC,mBAAQC,EAAR,YAAwBD,QAXnC,CAYI,IAAIE,EAAY,MAZpB,YAaO,CACC,CAAC,aAAc,KACf,CAAC,aAAc,KACf,CAAC,cAAe,MAClBH,KAAI,SAAAC,GAAC,mBAAQG,EAAR,YAA4BH,QAjBvC,YAkBO,CACC,gBACA,cACA,YACA,UACA,YACA,OACA,QACA,WACA,QACA,MACA,YACA,SACFD,KAAI,SAAAC,GAAC,OAAI,IAAII,EAAoBJ,OA/BvC,YAgCO,CACC,aACA,SACA,eACA,gBACA,uBACA,QACA,WACA,QACA,oBACA,gBACA,aACA,WACA,WACA,cACA,UACA,aACA,SACA,gBACA,WACA,iBACA,0BACA,YACA,mBACA,gBACA,qBACA,kBACA,aACA,eACA,QACA,YACFD,KAAI,SAAAC,GAAC,OAAI,IAAIK,EAAgBL,Q,8KAKtBM,QAAQC,WAAWV,KAAKC,QAAQC,IAAb,uCAAiB,WAAOC,GAAP,eAAAQ,EAAA,sEACtBR,EAAES,QADoB,cACvCC,EADuC,gBAEhCV,EAAEW,QAAQD,GAFsB,mFAAjB,kCAAAb,KAAA,iB,qJAOxC,SAASe,EAAWC,EAAQC,EAAOC,EAAMC,EAAQC,EAAOC,GAA2B,IAArBC,EAAoB,uDAAJ,GAC1E,MAAO,CACHN,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACNC,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACNC,cAAeA,GAIvB,SAASC,EAAOC,GACZ,IAAMC,EAAOD,EAAIE,QAAO,SAACC,EAAOxB,GAAR,OAAcwB,EAAQxB,IAAG,GAAKqB,EAAII,OACpDC,EAAQC,KAAKC,KAAKP,EAAItB,KAAI,SAAAC,GAAC,OAAI2B,KAAKE,IAAI7B,EAAIsB,EAAO,MAAIC,QAAO,SAACf,EAAGsB,GAAJ,OAAWtB,EAAIsB,KAAKT,EAAII,QAC5F,MAAO,CAACH,EAAMI,G,IAGZvB,E,WACF,WAAY4B,EAAMC,GAAO,oBACrBnC,KAAKkC,KAAOA,EACZlC,KAAKmC,KAAOA,E,6FAGFtB,G,+FACJuB,EAAW,GACjBvB,EAASwB,KAAKC,SAAQ,SAACC,EAASC,GACxBA,EAAI,EAAKL,MACTC,EAASK,KAAKC,IAAMC,IAAN,qDAAwDJ,EAAxD,c,SAGO9B,QAAQmC,IAAIR,G,cAAnCS,E,SACgBtB,EAAOsB,EAAe3C,KAAI,SAAAC,GAAC,OAAIA,EAAEkC,KAAKjB,U,mBAArDK,E,KAAMI,E,uBACNgB,EAAe3C,KAAI,SAAA4C,GAAkB,IAAD,EACvC,OAAO/B,EAAW,MAAD,OACP,EAAKmB,MACXY,EAAcT,KAAKpB,MAFN,UAGb6B,EAAcT,KAAKU,WAHN,uDAGqDD,EAAcT,KAAKW,IACrFF,EAAcT,KAAKY,IAClBH,EAAcT,KAAKjB,MAAQK,GAAQI,EACpC,IAAIqB,KAA+B,IAA1BJ,EAAcT,KAAKc,MANf,sBAOEL,EAAcT,KAAKjB,Y,0PAK7BsB,IAAMC,IAAN,gDAAmD3C,KAAKkC,KAAxD,U,qJA+Bf9B,E,WACF,WAAYgD,GAA8B,IAApBC,EAAmB,uDAAN,KAAM,oBACrCrD,KAAKoD,SAAWA,EAChBpD,KAAKqD,WAAaA,E,oDAGdxC,GAAW,IAAD,SACQU,EAAOV,EAASwB,KAAKiB,MAAMpD,KAAI,SAAAC,GAAC,OAAIA,EAAEoD,qBAD9C,mBACP9B,EADO,KACDI,EADC,KAERR,EAAO,IAAI6B,KAEjB,OADA7B,EAAKmC,SAAS,EAAG,EAAG,EAAG,GAChB3C,EAASwB,KAAKiB,MAAMpD,KAAI,SAACuD,GAAU,IAAD,EACrC,OAAO1C,EAAW,MAAD,iBACP,EAAKsC,kBADE,QACY,EAAKD,UADjB,UAEVK,EAAKC,KAFK,gBAEOD,EAAKE,aACzBF,EAAKG,SACLH,EAAKI,MAAMC,OACVL,EAAKF,iBAAmB9B,GAAQI,EACjCR,Q,uJAKF0C,EAAY,IAAIb,MACZc,QAAQD,EAAUE,UAAY,IAClCC,E,UAAgBH,EAAUI,c,aAAkBJ,EAAUK,WAAa,GAAGC,WAAWC,SAAS,EAAG,K,YAAQP,EAAUE,UAAUI,WAAWC,SAAS,EAAG,M,SACzI5B,IAAMC,IAAN,gEAAmEuB,EAAnE,qBAA0FlE,KAAKoD,SAA/F,sCAA6I,CACtJmB,QAAS,CACLC,OAAQ,oC,qJAMlBhE,E,WACF,WAAYiE,GAAY,oBACpBzE,KAAKyE,UAAYA,E,6FAGP5D,G,6FACYU,EAAOV,EAASwB,KAAKA,KAAKqC,SAASxE,KAAI,SAAAC,GAAC,OAAIA,EAAEkC,KAAKsC,IAAMxE,EAAEkC,KAAKuC,U,mBAA/EnD,E,KAAMI,E,uBACNhB,EAASwB,KAAKA,KAAKqC,SAASxE,KAAI,SAAA2E,GACnC,OAAO9D,EACH,EAAK0D,UACLI,EAAKxC,KAAKpB,MACV4D,EAAKxC,KAAKU,IACV8B,EAAKxC,KAAKlB,QACR0D,EAAKxC,KAAKsC,IAAME,EAAKxC,KAAKuC,MAASnD,GAAQI,EAC7C,IAAIqB,KAAyC,KAAnC2B,EAAKxC,KAAKyC,QAAU,QANjB,sBAOGD,EAAKxC,KAAKsC,IAAME,EAAKxC,KAAKuC,Y,0PAKrClC,IAAMC,IAAN,iCAAoC3C,KAAKyE,UAAzC,mB,qJAIfpE,E,WACF,WAAY8B,GAAO,oBACfnC,KAAKmC,KAAOA,E,6FAGFtB,G,sFACYU,EAAOV,EAASwB,KAAKnC,KAAI,SAAAC,GAAC,OAAIA,EAAE4E,2B,mBAA/CtD,E,KAAMI,E,uBACNhB,EAASwB,KAAKnC,KAAI,SAAA2E,GACrB,OAAO9D,EACH,QACA8D,EAAK5D,MACL4D,EAAK9B,IACL8B,EAAKG,KAAKtB,MACTmB,EAAKE,uBAAyBtD,GAAQI,EACvC,IAAIqB,KAAK2B,EAAKI,YAND,qBAOCJ,EAAKK,KAPN,6BAO+BL,EAAKlB,YAPpC,uBAO8DkB,EAAKE,6B,0PAK3ErC,IAAMC,IAAN,+CAAkD3C,KAAKmC,O,qJAItE5B,E,WACF,WAAY4E,GAAO,oBACfnF,KAAKmF,KAAOA,E,6FAGFtE,G,6FACYU,EAAOV,EAASwB,KAAKiB,MAAMpD,KAAI,SAAAC,GAAC,OAAIA,EAAEiF,e,mBAArD3D,E,KAAMI,E,uBACNhB,EAASwB,KAAKiB,MAAMpD,KAAI,SAAA2E,GAC3B,OAAO9D,EAAW,SAAD,OACJ,EAAKoE,MACdN,EAAK5D,MACL4D,EAAK3D,KACL2D,EAAKhB,MAAMwB,cACVR,EAAKO,WAAa3D,GAAQI,EAC3B,IAAIqB,KAA0B,IAArB2B,EAAKS,oB,0PAKT5C,IAAMC,IAAN,oEAAuE3C,KAAKmF,O,gvBC7PjG,IACMI,EAAgBC,YAAH,KAQfC,EAAeC,IAAOC,IAAV,IATH,eAWuB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,iBAXpC,cAeQP,EAfR,eAqBQQ,E,uKAEb,OACI,kBAACN,EAAD,U,GAHwBO,IAAMC,W,o4FCnB1C,IAAMJ,EAAQ,CACNK,UAAW,qBACXC,gBAAiB,kBACjBC,cAAe,qBACfN,eAAgB,uBAChBO,cAAe,qBACfC,YAAa,sBAEjBC,EAASb,IAAOC,IAAV,KAEkB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,mBAErCK,EAAOd,IAAOC,IAAV,KAEoB,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,iBAErCK,EAAOf,IAAOC,IAAV,KAMJe,EAAOhB,IAAOiB,GAAV,KAKJC,EAAOlB,IAAOmB,GAAV,KAES,SAAAjB,GAAC,OAAIA,EAAEC,MAAMK,aAWF,SAAAN,GAAC,OAAIA,EAAEC,MAAMK,aAKb,SAAAN,GAAC,OAAIA,EAAEkB,WAAalB,EAAEC,MAAMC,eAAiBF,EAAEC,MAAMQ,iBAInD,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,kBAGvCiB,GAAerB,IAAOC,IAAV,KAMZqB,GAAStB,IAAOuB,OAAV,KAOO,SAAArB,GAAC,OAAIA,EAAEC,MAAMK,aACF,SAAAN,GAAC,OAAIA,EAAEC,MAAMS,eACb,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,iBAGrCa,GAAWxB,IAAOC,IAAV,KAKRwB,GAAWzB,YAAOwB,GAAPxB,CAAH,KAIR0B,GAAY1B,YAAOwB,GAAPxB,CAAH,KAKT2B,GAAW3B,YAAOwB,GAAPxB,CAAH,KAKR4B,GAAa5B,YAAOwB,GAAPxB,CAAH,KAIV6B,GAAW7B,IAAOC,IAAV,KAYS6B,G,kDACnB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,KAAO9B,IAAM+B,YAClB,EAAKC,SAAW,IAAIjI,EACpB,EAAKkI,UAAY,GACjB,EAAKC,MAAQ,CACXC,QAAS,GACTC,eAAgB,GAVH,E,gEAcE,IAAD,OAChBC,SAASC,iBAAiB,UAAWtI,KAAK0H,WAC1C1H,KAAKgI,SAASpH,QACX2H,MAAK,SAAAJ,GACJ,IAAIK,EAAU,GACdL,EAAQ7F,SAAQ,SAAAmG,GACQ,cAAlBA,EAAOC,OACTF,EAAUA,EAAQG,OAAOF,EAAOG,OACL,aAAlBH,EAAOC,QAChBG,QAAQC,MAAML,EAAOM,WAIzB,EAAKC,SAAS,CACZb,QAASK,EAAQS,QAAO,SAAA9I,GAAC,OAAM,IAAI+C,KAAS/C,EAAEkB,MAAQ,MAFvC,MAE0D6H,MAAK,SAAC/I,EAAGgJ,GAAJ,OAAWhJ,EAAEiB,OAAS+H,EAAE/H,MAAS,GAAK,KACpHgH,cAAe,IACd,kBAAM,EAAKN,KAAKsB,QAAQd,iBAAiB,SAAU,EAAKV,gBAE5DyB,OAAM,SAAAC,GAAG,OAAIT,QAAQC,MAAMQ,Q,gCAGxBC,GAAQ,IAAD,OACf,OAAQA,EAAMC,KACZ,IAAK,IAEDxJ,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CACtBC,QAASD,EAAMC,QAAQe,MAAK,SAAC/I,EAAGgJ,GAAJ,OAAWhJ,EAAEiB,OAAS+H,EAAE/H,MAAS,GAAK,KAClEgH,cAAe,MACb,kBAAM,EAAKP,cACf,MACJ,IAAK,IAED7H,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CACtBC,QAASD,EAAMC,QAAQe,MAAK,SAAC/I,EAAGgJ,GAAJ,OAAWhJ,EAAEkB,MAAQ8H,EAAE9H,KAAQ,GAAK,KAChE+G,cAAe,MACb,kBAAM,EAAKP,cACf,MACJ,IAAK,IAED7H,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CACtBC,QAAS,EAAKsB,QAAQvB,EAAMC,SAC5BC,cAAe,MACb,kBAAM,EAAKP,cACf,MACJ,IAAK,IACD7H,KAAKgJ,SAAS,CAACZ,cAAe,IAAI,kBAAM,EAAKP,cAC7C,MACJ,IAAK,YACL,IAAK,IACD7H,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CAACE,cAAetG,KAAK4H,IAAIxB,EAAME,cAAgB,EAAGF,EAAMC,QAAQvG,OAAS,OAAM,kBAAM,EAAKiG,cAClH,MACJ,IAAK,UACL,IAAK,IACD7H,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CAACE,cAAetG,KAAK6H,IAAI,EAAGzB,EAAME,cAAgB,OAAM,kBAAM,EAAKP,cAC3F,MACJ,IAAK,QACG7H,KAAKkI,MAAME,eAAiB,GAC5BwB,OAAOC,KAAK7J,KAAKkI,MAAMC,QAAQnI,KAAKkI,MAAME,eAAelH,S,+BAQ5DqI,GAAQ,IAAD,OACRvJ,KAAK8H,KAAKsB,QAAQU,cAAgBF,OAAOG,YAAc/J,KAAK8H,KAAKsB,QAAQY,WAAa,KACtFhK,KAAKgJ,UAAS,SAAAd,GAAK,MAAK,CAACE,cAAeF,EAAME,cAAgB,EAAKH,gB,8BAInEgC,GAEN,IADA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMrI,OAClB,IAAMwI,GACXD,EAAcrI,KAAKuI,MAAMvI,KAAKwI,SAAWF,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,I,+BAGC,IAAD,OACL,GAAkC,IAA9BjK,KAAKkI,MAAMC,QAAQvG,OACrB,OACE,kBAAC,IAAD,CAAeiE,MAAOA,GAClB,kBAAC,EAAD,OAIR,IAAM0E,EAAY,CACdC,YAA2C,IAA9BxK,KAAKkI,MAAMC,QAAQvG,SAElC6I,EAAY,CACVC,QAAS,kBAAM,EAAKhD,UAAU,CAAE8B,IAAK,QAEvCmB,EAAY,CACVD,QAAS,kBAAM,EAAKhD,UAAU,CAAE8B,IAAK,QAEvCoB,EAAc,CACZF,QAAS,kBAAM,EAAKhD,UAAU,CAAE8B,IAAK,QAEvCqB,EAAc,CACZnG,SACE,kBAACqC,GAAD,KACE,kBAACC,GAAWyD,EAAZ,SACA,kBAACzD,GAAW2D,EAAZ,QACA,kBAAC3D,GAAW4D,EAAZ,YAINE,EAAY,CACVC,IAAK/K,KAAK8H,MAEZ,OACE,kBAAC,IAAD,CAAejC,MAAOA,GACpB,6BACE,kBAACW,EAAS+D,EACR,kBAAChE,EAAWsE,GACZ,kBAACpE,EAASqE,EACR,kBAACpE,EAAD,KACG1G,KAAKkI,MAAMC,QAAQzG,QAAO,SAACF,EAAKiH,EAAQjG,GACvC,GAAIA,EAAK,EAAK0F,MAAME,cAAgB,EAAKH,UAAY,CACnD,IAAM+C,EAAY,CACdxB,IAAKhH,EACLsE,WAAYtE,IAAM,EAAK0F,MAAME,cAC7BsC,QAAS,kBAAMd,OAAOC,KAAKpB,EAAOvH,QAEpC+J,EAAY,CACVvG,SAAS,GAAD,OAAKlC,EAAL,eAAa,EAAK0F,MAAMC,QAAQvG,SAE1CsJ,EAAc,CACZxG,SAAS,GAAD,OAAK+D,EAAOzH,OAAZ,aAAuByH,EAAOtH,SAExCgK,EAAa,CACXzG,SAAU+D,EAAOrH,MAAMgK,eAAe,UAExCT,EAAY,CACVjG,SAAS,GAAD,SAAQ,IAAIxB,KAASuF,EAAOpH,MAAS,MAAM+J,eAAe,SAA1D,WAEVC,EAAY,CACVC,wBAAyB,CACvBC,OAAO,GAAD,OAAK9C,EAAOxH,SAGxBO,EAAIiB,KACF,kBAACmE,EAASoE,EACR,kBAAC7D,GAAa8D,GACd,kBAAC3D,GAAe4D,GAChB,kBAAC9D,GAAc+D,GACf,kBAAC9D,GAAasD,GACd,kBAACpD,GAAa8D,KAIpB,OAAO7J,IACN,W,iCAUnBxB,KAAK8H,KAAKsB,QAAQvB,SAAS,EAAG/F,KAAK6H,IAAI,EAA+B,IAA5B3J,KAAKkI,MAAME,cAAwB,U,GAtLhDpC,IAAMC,WClGnBuF,QACW,cAA7B5B,OAAO6B,SAASC,UAEe,UAA7B9B,OAAO6B,SAASC,UAEhB9B,OAAO6B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFzD,SAAS0D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3D,MAAK,SAAA4D,GACJA,EAAaC,gBAEd/C,OAAM,SAAAP,GACLD,QAAQC,MAAMA,EAAMuD,c","file":"static/js/main.9483b760.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class QueryResource {\n    constructor() {\n        this.queries = [\n            ...[\n                [\"javascript\"],\n                [\"typescript\"],\n                [\"shell\"],\n                [\"go\"],\n                [\"css\"],\n                [\"html\"],\n                [\"c%23\", \"csharp\"],\n                [\"c%2Bc%2B\", \"c++\"],\n                [\"python\"],\n            ].map(x => new SourceGithub(...x)),\n            new SourceDevto(200),\n            ...[\n                [\"topstories\", 300],\n                [\"askstories\", 200],\n                [\"showstories\", 200],\n            ].map(x => new SourceHackerNews(...x)),\n            ...[\n                \"stackoverflow\",\n                \"serverfault\",\n                \"superuser\",\n                \"webapps\",\n                \"askubuntu\",\n                \"unix\",\n                \"stats\",\n                \"opendata\",\n                \"chess\",\n                \"dsp\",\n                \"parenting\",\n                \"quant\",\n            ].map(x => new SourceStackExchange(x)),\n            ...[\n                \"r/appideas\",\n                \"r/bash\",\n                \"r/bashtricks\",\n                \"r/commandline\",\n                \"r/coolgithubprojects\",\n                \"r/cpp\",\n                \"r/csharp\",\n                \"r/css\",\n                \"r/dataisbeautiful\",\n                \"r/datascience\",\n                \"r/datasets\",\n                \"r/docker\",\n                \"r/dotnet\",\n                \"r/lightbulb\",\n                \"r/linux\",\n                \"r/mlpapers\",\n                \"r/node\",\n                \"r/programming\",\n                \"r/python\",\n                \"r/raspberry_pi\",\n                \"r/raspberry_pi_projects\",\n                \"r/reactjs\",\n                \"r/Showerthoughts\",\n                \"r/sideproject\",\n                \"r/somebodymakethis\",\n                \"r/startup_ideas\",\n                \"r/startups\",\n                \"r/typescript\",\n                \"r/vim\",\n                \"r/vscode\"\n            ].map(x => new SourceSubreddit(x))\n        ];\n    }\n\n    async query() {\n        return await Promise.allSettled(this.queries.map(async (x) => {\n            const response = await x.query();\n            return await x.process(response);\n        }));\n    }\n}\n\nfunction createItem(source, title, link, author, score, date, miscellaneous = \"\") {\n    return {\n        source: source,\n        title: title,\n        link: link,\n        author: author,\n        score: score,\n        date: date,\n        miscellaneous: miscellaneous\n    };\n}\n\nfunction zScore(arr) {\n    const mean = arr.reduce((gross, x) => gross + x, 0) / arr.length;\n    const stdev = Math.sqrt(arr.map(x => Math.pow(x - mean , 2)).reduce((a, b) =>  a + b) / arr.length);\n    return [mean, stdev];\n}\n\nclass SourceHackerNews {\n    constructor(path, take) {\n        this.path = path;\n        this.take = take;\n    }\n\n    async process(response) {\n        const promises = [];\n        response.data.forEach((storyID, i) => {\n            if (i < this.take) {\n                promises.push(axios.get(`https://hacker-news.firebaseio.com/v0/item/${storyID}.json`));\n            }\n        });\n        const storyResponses = await Promise.all(promises);\n        const [mean, stdev] = zScore(storyResponses.map(x => x.data.score));\n        return storyResponses.map(storyResponse => {\n            return createItem(\n                `hn/${this.path}`,\n                storyResponse.data.title,\n                storyResponse.data.url ?? `https://news.ycombinator.com/item?id=${storyResponse.data.id}`,\n                storyResponse.data.by, \n                (storyResponse.data.score - mean) / stdev, \n                new Date(storyResponse.data.time * 1e3), \n                `<br/>score: ${storyResponse.data.score}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://hacker-news.firebaseio.com/v0/${this.path}.json`);\n    }\n}\n\nclass SourceGithubTrending {\n    constructor(language = null, prettyName = null) {\n        this.language = language;\n        this.prettyName = prettyName;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.map(x => x.currentPeriodStars));\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.map((info) => {\n            return createItem(\n                `gh/${this.prettyName ?? this.language ?? \"\"}`, \n                info.name,\n                info.url,\n                info.author,\n                (info.currentPeriodStars - mean) / stdev,\n                date,\n                `<br/>language: ${info.language}<br/>description: ${info.description}<br/>score: ${info.stars}`);\n        });\n    }\n\n    async query() {\n        return await (this.language ? axios.get(`https://ghapi.huchen.dev/repositories?since=daily&language=${this.language}`) : axios.get(\"https://ghapi.huchen.dev/repositories?since=daily\"));\n    }\n}\n\nclass SourceGithub {\n    constructor(language, prettyName = null) {\n        this.language = language;\n        this.prettyName = prettyName;\n    }\n\n    process(response) {\n        const [mean, stdev] = zScore(response.data.items.map(x => x.stargazers_count));\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.items.map((info) => {\n            return createItem(\n                `gh/${this.prettyName ?? this.language}`,\n                `${info.name}<br/>${info.description}`,\n                info.html_url,\n                info.owner.login,\n                (info.stargazers_count - mean) / stdev,\n                date);\n        })\n    }\n\n    async query() {\n        const startDate = new Date();\n        startDate.setDate(startDate.getDate() - 60);\n        const dateFormat = `${startDate.getFullYear()}-${(startDate.getMonth() + 1).toString().padStart(2, \"0\")}-${startDate.getDate().toString().padStart(2, \"0\")}`;\n        return await axios.get(`https://api.github.com/search/repositories?q=created:>${dateFormat}+language:${this.language}&sort=stars&order=desc&per_page=25`, {\n            headers: {\n                Accept: \"application/vnd.github.preview\"\n            }\n        })\n    }\n}\n\nclass SourceSubreddit {\n    constructor(subreddit) {\n        this.subreddit = subreddit;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.data.children.map(x => x.data.ups - x.data.downs));\n        return response.data.data.children.map(item => {\n            return createItem(\n                this.subreddit,\n                item.data.title,\n                item.data.url,\n                item.data.author,\n                ((item.data.ups - item.data.downs) - mean) / stdev, \n                new Date((item.data.created - 8 * 60 * 60) * 1e3), \n                `<br/>score: ${(item.data.ups - item.data.downs)}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://www.reddit.com/${this.subreddit}.json?limit=25`);\n    }\n}\n\nclass SourceDevto {\n    constructor(take) {\n        this.take = take;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.map(x => x.public_reactions_count));\n        return response.data.map(item => {\n            return createItem(\n                \"devto\", \n                item.title, \n                item.url, \n                item.user.name, \n                (item.public_reactions_count - mean) / stdev,\n                new Date(item.created_at),\n                `<br/>tags: ${item.tags}<br/>description: ${item.description}<br/>score: ${item.public_reactions_count}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://dev.to/api/articles?per_page=${this.take}`);\n    }\n}\n\nclass SourceStackExchange {\n    constructor(site) {\n        this.site = site;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.items.map(x => x.view_count));\n        return response.data.items.map(item => {\n            return createItem(\n                `stack/${this.site}`,\n                item.title,\n                item.link,\n                item.owner.display_name,\n                (item.view_count - mean) / stdev,\n                new Date(item.creation_date * 1e3));\n        })\n    }\n\n    async query() {\n        return await axios.get(`https://api.stackexchange.com/2.2/questions?sort=hot&site=${this.site}`);\n    }\n}","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst size = \"16px\";\nconst SpinAnimation = keyframes`\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    `,\n    StyledLoader = styled.div`\n        border: ${size} solid rgb(63, 63, 63);\n        border-top: ${size} solid ${p => p.theme.highlightColor};\n        border-radius: 50%;\n        width: calc(4 * ${size});\n        height: calc(4 * ${size});\n        animation: ${SpinAnimation} 2s linear infinite;\n        position: absolute;\n        top: calc(50% - 2 * ${size});\n        left: calc(50% - 2 * ${size});\n    `;\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <StyledLoader/>\n        );\n    }\n}","import React from 'react';\nimport QueryResource from './QueryResource';\nimport Loader from './Loader';\nimport styled, { ThemeProvider } from 'styled-components';\n\nconst theme = {\n        textColor: \"rgb(127, 127, 127)\",\n        topbarBackColor: \"rgb(29, 29, 29)\",\n        viewBackColor: \"rgb(210, 210, 210)\",\n        highlightColor: \"rgba(0, 255, 0, 0.5)\",\n        cardBackColor: \"rgb(255, 255, 255)\",\n        borderColor: \"rgb(232, 232, 232)\"\n    },\n    Topbar = styled.div`\n        height: 60px;\n        background-color: ${p => p.theme.topbarBackColor};\n    `,\n    View = styled.div`\n        height: 100vh;\n        background-color: ${p => p.theme.viewBackColor};\n    `,\n    Body = styled.div`\n        height: 100%;\n        height: calc(100% - 60px);\n        padding 0 16px;\n        overflow-y: scroll;\n    `,\n    List = styled.ul`\n        list-style-type: none;\n        padding: 0 16px;\n        height: 100%;\n    `,\n    Card = styled.li`\n        cursor: pointer;\n        color: ${p => p.theme.textColor};\n        height: 120px;\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: repeat(5, 1fr);\n        grid-template-areas: \n            \"info score\"\n            \"body body\"\n            \"body body\"\n            \"body body\"\n            \"source date\";\n        border: 1px solid ${p => p.theme.textColor};\n        margin: 8px auto;\n        font-size: 0.8em;\n        border-radius: 4px;\n        max-width: 500px;\n        background-color: ${p => p.isSelected ? p.theme.highlightColor : p.theme.cardBackColor};\n        transition: background-color 0.5s;\n\n        :hover {\n          background-color: ${p => p.theme.highlightColor};\n        }\n    `,\n    TopbarLayout = styled.div`\n        display: flex;\n        flex-flow: row;\n        align-items: center;\n        justify-content: space-evenly;\n    `,\n    Button = styled.button`\n        cursor: pointer;\n        font-size: 0.9rem;\n        padding: 0px;\n        height: 40px;\n        width: 100px;\n        margin: 10px 0px;\n        color: ${p => p.theme.textColor};\n        border: 1px solid ${p => p.theme.borderColor};\n        background-color: ${p => p.theme.cardBackColor};\n        border-radius: 4px;\n    `,\n    TextWrap = styled.div`\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    `,\n    CardInfo = styled(TextWrap)`\n        grid-area: info;\n        margin: 0px 8px;\n    `,\n    CardScore = styled(TextWrap)`\n        grid-area: score;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    CardDate = styled(TextWrap)`\n        grid-area: date;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    CardSource = styled(TextWrap)`\n        grid-area: source;\n        margin: 0px 8px;\n    `,\n    CardBody = styled.div`\n        grid-area: body;\n        text-align: center;\n        margin: 10px;\n        height: 3.6rem;\n        line-height: 1.2rem;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    `;\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.onKeyDown = this.onKeyDown.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.body = React.createRef();\n      this.resource = new QueryResource();\n      this.increment = 50;\n      this.state = {\n        results: [],\n        selectedIndex: -1\n      };\n  }\n\n  componentDidMount() {\n      document.addEventListener(\"keydown\", this.onKeyDown);\n      this.resource.query()\n        .then(results => {\n          let flatten = [];\n          results.forEach(result => {\n            if (result.status === \"fulfilled\") {\n              flatten = flatten.concat(result.value);\n            } else if (result.status === \"rejected\") {\n              console.error(result.reason);\n            }\n          });\n          const maxHours = 1 * 24;\n          this.setState({\n            results: flatten.filter(x => ((new Date() - x.date) / 36e5) <= maxHours).sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }, () => this.body.current.addEventListener(\"scroll\", this.onScroll));\n        })\n        .catch(err => console.error(err));\n  }\n\n  onKeyDown(event) {\n    switch (event.key) {\n      case \"s\":\n          // sort score descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"d\":\n          // sort date descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.date <= y.date) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"r\":\n          // sort randomly\n          this.setState(state => ({\n            results: this.shuffle(state.results),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"i\":\n          this.setState({selectedIndex: 0}, () => this.scrollTo());\n          break;\n      case \"ArrowDown\":\n      case \"j\":\n          this.setState(state => ({selectedIndex: Math.min(state.selectedIndex + 1, state.results.length - 1)}), () => this.scrollTo());\n          break;\n      case \"ArrowUp\":\n      case \"k\":\n          this.setState(state => ({selectedIndex: Math.max(0, state.selectedIndex - 1)}), () => this.scrollTo());\n          break;\n      case \"Enter\":\n          if (this.state.selectedIndex > -1) {\n              window.open(this.state.results[this.state.selectedIndex].link);\n          }\n          break;\n      default:\n          break;\n    }\n  }\n\n  onScroll(event) {\n      if (this.body.current.scrollHeight - (window.innerHeight + this.body.current.scrollTop) < 256) {\n          this.setState(state => ({selectedIndex: state.selectedIndex + this.increment}));\n      }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n      if (this.state.results.length === 0) {\n        return (\n          <ThemeProvider theme={theme}>\n              <Loader />\n          </ThemeProvider>\n        );\n      }\n      const viewProps = {\n          isVisible: !(this.state.results.length === 0)\n        },\n        sortProps = {\n          onClick: () => this.onKeyDown({ key: \"s\" })\n        },\n        dateProps = {\n          onClick: () => this.onKeyDown({ key: \"d\" })\n        },\n        randomProps = {\n          onClick: () => this.onKeyDown({ key: \"r\" })\n        },\n        topbarProps = {\n          children: (\n            <TopbarLayout>\n              <Button {...sortProps}>Score</Button>\n              <Button {...dateProps}>Date</Button>\n              <Button {...randomProps}>Random</Button>\n            </TopbarLayout>\n          )\n        },\n        bodyProps = {\n          ref: this.body\n        };\n        return (\n          <ThemeProvider theme={theme}>\n            <div>\n              <View {...viewProps}>\n                <Topbar {...topbarProps} />\n                <Body {...bodyProps}>\n                  <List>\n                    {this.state.results.reduce((arr, result, i) => {\n                      if (i < (this.state.selectedIndex + this.increment)) {\n                        const cardProps = {\n                            key: i,\n                            isSelected: i === this.state.selectedIndex,\n                            onClick: () => window.open(result.link)\n                          },\n                          infoProps = {\n                            children: `${i} of ${this.state.results.length}`\n                          },\n                          sourceProps = {\n                            children: `${result.source}: ${result.author}`\n                          },\n                          scoreProps = {\n                            children: result.score.toLocaleString(\"en-US\")\n                          },\n                          dateProps = {\n                            children: `${(((new Date() - result.date)) / 36e5).toLocaleString(\"en-US\")} hours`\n                          },\n                          textProps = {\n                            dangerouslySetInnerHTML: {\n                              __html: `${result.title}`\n                            }\n                          }\n                        arr.push(\n                          <Card {...cardProps}>\n                            <CardInfo {...infoProps} />\n                            <CardSource {...sourceProps} />\n                            <CardScore {...scoreProps} />\n                            <CardDate {...dateProps} />\n                            <CardBody {...textProps} />\n                          </Card>\n                        );\n                      }\n                      return arr;\n                    }, [])}\n                  </List>\n                </Body>\n              </View>\n            </div>\n          </ThemeProvider>\n        );\n  }\n\n  scrollTo() {\n    this.body.current.scrollTo(0, Math.max(0, this.state.selectedIndex * (126) - 200));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}