{"version":3,"sources":["Loader.module.css","Topbar.module.css","QueryResource.js","Loader.js","Topbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","QueryResource","addItem","src","title","link","author","score","date","misc","createItem","this","queries","SourceHackerNews","SourceGithubTrending","SourceDevto","SourceStackExchange","SourceSubreddit","source","miscellaneous","Promise","all","map","x","a","query","response","process","add","path","take","promises","data","forEach","storyID","i","push","axios","get","storyResponses","scoreTotal","reduce","gross","storyResponse","url","id","by","Date","time","language","prettyName","currentPeriodStars","setHours","info","name","description","stars","subreddit","children","ups","downs","item","created","public_reactions_count","user","created_at","tags","site","items","view_count","owner","display_name","creation_date","Loader","className","styles","loader","React","Component","Topbar","componentProps","component","props","App","onKeyDown","bind","onScroll","scrollTo","resource","increment","state","results","selectedIndex","document","addEventListener","then","arrays","flatten","array","concat","setState","sort","y","catch","err","console","error","event","key","shuffle","Math","min","length","max","window","open","body","html","documentElement","documentHeight","scrollHeight","offsetHeight","clientHeight","scrollY","innerHeight","temporaryValue","randomIndex","currentIndex","floor","random","loaderProps","viewProps","style","position","width","mainProps","topbarLayoutProps","sortProps","onClick","dateProps","randomProps","topbarProps","listProps","result","listItemProps","cardProps","infoProps","sourceProps","scoreProps","toLocaleString","textProps","dangerouslySetInnerHTML","__html","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.800f41ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3MXRD\",\"spin\":\"Loader_spin__35Z7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Topbar_component__1EqBD\"};","import axios from 'axios';\n\nexport default class QueryResource {\n    constructor() {\n        const addItem = (src, title, link, author, score, date, misc) => this.createItem(src, title, link, author, score, date, misc);\n        this.queries = [\n            new SourceHackerNews(addItem, \"topstories\", 300),\n            new SourceHackerNews(addItem, \"askstories\", 200),\n            new SourceHackerNews(addItem, \"showstories\", 200),\n            new SourceGithubTrending(addItem),\n            new SourceDevto(addItem),\n            new SourceGithubTrending(addItem, \"javascript\"),\n            new SourceGithubTrending(addItem, \"typescript\"),\n            new SourceGithubTrending(addItem, \"shell\"),\n            new SourceGithubTrending(addItem, \"go\"),\n            new SourceGithubTrending(addItem, \"css\"),\n            new SourceGithubTrending(addItem, \"html\"),\n            new SourceGithubTrending(addItem, \"c%23\", \"c#\"),\n            new SourceGithubTrending(addItem, \"c%2B%2B\", \"c++\"),\n            new SourceStackExchange(addItem, \"stackoverflow\"),\n            new SourceStackExchange(addItem, \"serverfault\"),\n            new SourceStackExchange(addItem, \"superuser\"),\n            new SourceStackExchange(addItem, \"webapps\"),\n            new SourceStackExchange(addItem, \"askubuntu\"),\n            new SourceStackExchange(addItem, \"unix\"),\n            new SourceStackExchange(addItem, \"stats\"),\n            new SourceStackExchange(addItem, \"opendata\"),\n            new SourceStackExchange(addItem, \"chess\"),\n            new SourceStackExchange(addItem, \"dsp\"),\n            new SourceStackExchange(addItem, \"parenting\"),\n            new SourceStackExchange(addItem, \"quant\"),\n            new SourceSubreddit(addItem, \"r/appideas\"),\n            new SourceSubreddit(addItem, \"r/bash\"),\n            new SourceSubreddit(addItem, \"r/bashtricks\"),\n            new SourceSubreddit(addItem, \"r/commandline\"),\n            new SourceSubreddit(addItem, \"r/coolgithubprojects\"),\n            new SourceSubreddit(addItem, \"r/cpp\"),\n            new SourceSubreddit(addItem, \"r/csharp\"),\n            new SourceSubreddit(addItem, \"r/css\"),\n            new SourceSubreddit(addItem, \"r/dataisbeautiful\"),\n            new SourceSubreddit(addItem, \"r/datascience\"),\n            new SourceSubreddit(addItem, \"r/datasets\"),\n            new SourceSubreddit(addItem, \"r/docker\"),\n            new SourceSubreddit(addItem, \"r/dotnet\"),\n            new SourceSubreddit(addItem, \"r/lightbulb\"),\n            new SourceSubreddit(addItem, \"r/linux\"),\n            new SourceSubreddit(addItem, \"r/mlpapers\"),\n            new SourceSubreddit(addItem, \"r/node\"),\n            new SourceSubreddit(addItem, \"r/programming\"),\n            new SourceSubreddit(addItem, \"r/python\"),\n            new SourceSubreddit(addItem, \"r/raspberry_pi\"),\n            new SourceSubreddit(addItem, \"r/raspberry_pi_projects\"),\n            new SourceSubreddit(addItem, \"r/reactjs\"),\n            new SourceSubreddit(addItem, \"r/sideproject\"),\n            new SourceSubreddit(addItem, \"r/somebodymakethis\"),\n            new SourceSubreddit(addItem, \"r/startup_ideas\"),\n            new SourceSubreddit(addItem, \"r/startups\"),\n            new SourceSubreddit(addItem, \"r/typescript\"),\n            new SourceSubreddit(addItem, \"r/vim\"),\n            new SourceSubreddit(addItem, \"r/vscode\"),\n        ];\n    }\n    \n    createItem(source, title, link, author, score, date, miscellaneous = \"\") {\n        return {\n            source: source,\n            title: title,\n            link: link,\n            author: author,\n            score: score,\n            date: date,\n            miscellaneous: miscellaneous\n        };\n    }\n\n    async query() {\n        return await Promise.all(this.queries.map(async (x) => {\n            const response = await x.query();\n            return await x.process(response);\n        }));\n    }\n}\n\nclass SourceHackerNews {\n    constructor(add, path, take) {\n        this.add = add;\n        this.path = path;\n        this.take = take;\n    }\n\n    async process(response) {\n        const promises = [];\n        response.data.forEach((storyID, i) => {\n            if (i < this.take) {\n                promises.push(axios.get(`https://hacker-news.firebaseio.com/v0/item/${storyID}.json`));\n            }\n        });\n        const storyResponses = await Promise.all(promises);\n        const scoreTotal = storyResponses.reduce((gross, x) => gross + x.data.score, 0);\n        return storyResponses.map(storyResponse => {\n            return this.add(\n                `hn/${this.path}`,\n                storyResponse.data.title,\n                storyResponse.data.url ?? `https://news.ycombinator.com/item?id=${storyResponse.data.id}`,\n                storyResponse.data.by, \n                storyResponse.data.score / scoreTotal, \n                new Date(storyResponse.data.time * 1e3), \n                `<br/>score: ${storyResponse.data.score}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://hacker-news.firebaseio.com/v0/${this.path}.json`);\n    }\n}\n\nclass SourceGithubTrending {\n    constructor(add, language = null, prettyName = null) {\n        this.add = add;\n        this.language = language;\n        this.prettyName = prettyName;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.reduce((gross, x) => gross + x.currentPeriodStars, 0);\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.map((info) => {\n            return this.add(\n                `gh/${this.prettyName ?? this.language ?? \"\"}`, \n                info.name,\n                info.url,\n                info.author,\n                info.currentPeriodStars / scoreTotal,\n                date,\n                `<br/>language: ${info.language}<br/>description: ${info.description}<br/>score: ${info.stars}`);\n        });\n    }\n\n    async query() {\n        return await (this.language ? axios.get(`https://ghapi.huchen.dev/repositories?since=daily&language=${this.language}`) : axios.get(\"https://ghapi.huchen.dev/repositories?since=daily\"));\n    }\n}\n\nclass SourceSubreddit {\n    constructor(add, subreddit) {\n        this.add = add;\n        this.subreddit = subreddit;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.data.children.reduce((gross, x) => gross + (x.data.ups - x.data.downs), 0);\n        return response.data.data.children.map(item => {\n            return this.add(\n                this.subreddit,\n                item.data.title,\n                item.data.url,\n                item.data.author,\n                (item.data.ups - item.data.downs) / scoreTotal, \n                new Date((item.data.created - 8 * 60 * 60) * 1e3), \n                `<br/>score: ${(item.data.ups - item.data.downs)}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://www.reddit.com/${this.subreddit}.json?limit=25`);\n    }\n}\n\nclass SourceDevto {\n    constructor(add) {\n        this.add = add;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.reduce((gross, x) => gross + x.public_reactions_count, 0);\n        return response.data.map(item => {\n            return this.add(\n                \"devto\", \n                item.title, \n                item.url, \n                item.user.name, \n                item.public_reactions_count / scoreTotal,\n                new Date(item.created_at),\n                `<br/>tags: ${item.tags}<br/>description: ${item.description}<br/>score: ${item.public_reactions_count}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(\"https://dev.to/api/articles\");\n    }\n}\n\nclass SourceStackExchange {\n    constructor(add, site) {\n        this.add = add;\n        this.site = site;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.items.reduce((gross, x) => gross + x.view_count, 0);\n        return response.data.items.map(item => {\n            return this.add(\n                `stack/${this.site}`,\n                item.title,\n                item.link,\n                item.owner.display_name,\n                item.view_count / scoreTotal,\n                new Date(item.creation_date * 1e3));\n        })\n    }\n\n    async query() {\n        return await axios.get(`https://api.stackexchange.com/2.2/questions?sort=hot&site=${this.site}`);\n    }\n}","import React from 'react';\nimport styles from './Loader.module.css';\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <div className={styles.loader}/>\n        );\n    }\n}","import React from 'react';\nimport styles from './Topbar.module.css';\n\nexport default class Topbar extends React.Component {\n    render() {\n        const componentProps = {\n            className: styles.component,\n            children: this.props.children\n        }\n        return (\n            <div {...componentProps}/>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport QueryResource from './QueryResource';\nimport Loader from './Loader';\nimport Topbar from './Topbar';\n\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.onKeyDown = this.onKeyDown.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.resource = new QueryResource();\n      this.increment = 15;\n      this.state = {\n        results: [],\n        selectedIndex: -1\n      };\n  }\n\n  componentDidMount() {\n      document.addEventListener(\"keydown\", this.onKeyDown);\n      document.addEventListener(\"scroll\", this.onScroll);\n      this.resource.query()\n        .then(arrays => {\n          let flatten = [];\n          arrays.forEach(array => {\n            flatten = flatten.concat(array);\n          });\n          this.setState({\n            results: flatten.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          })\n        })\n        .catch(err => console.error(err));\n  }\n\n  onKeyDown(event) {\n    switch (event.key) {\n      case \"s\":\n          // sort score descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"d\":\n          // sort date descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.date <= y.date) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"r\":\n          // sort randomly\n          this.setState(state => ({\n            results: this.shuffle(state.results),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"i\":\n          this.setState({selectedIndex: 0}, () => this.scrollTo());\n          break;\n      case \"ArrowDown\":\n      case \"j\":\n          this.setState(state => ({selectedIndex: Math.min(state.selectedIndex + 1, state.results.length - 1)}), () => this.scrollTo());\n          break;\n      case \"ArrowUp\":\n      case \"k\":\n          this.setState(state => ({selectedIndex: Math.max(0, state.selectedIndex - 1)}), () => this.scrollTo());\n          break;\n      case \"Enter\":\n          if (this.state.selectedIndex > -1) {\n              window.open(this.state.results[this.state.selectedIndex].link);\n          }\n          break;\n      default:\n          break;\n    }\n  }\n\n  onScroll(event) {\n      const body = document.body,\n          html = document.documentElement,\n          documentHeight = Math.max( body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n      if (window.scrollY >= documentHeight - window.innerHeight) {\n          this.setState(state => ({selectedIndex: state.selectedIndex + this.increment}));\n      }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n      const loaderProps = {\n          className: `${this.state.results.length === 0 ? \"show\" : \"hide\"}`\n        },\n        viewProps = {\n          className: `${this.state.results.length === 0 ? \"hide\" : \"show\"}`,\n          style: {\n            position: \"absolute\",\n            width: \"100%\"\n          }\n        },\n        mainProps = {\n          className: \"main\"\n        },\n        topbarLayoutProps = {\n          className: \"topbarLayout\"\n        },\n        sortProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"s\" })\n        },\n        dateProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"d\" })\n        },\n        randomProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"r\" })\n        },\n        topbarProps = {\n          children: (\n            <div {...topbarLayoutProps}>\n              <button {...sortProps}>Score</button>\n              <button {...dateProps}>Date</button>\n              <button {...randomProps}>Random</button>\n            </div>\n          )\n        },\n        listProps = {\n          className: \"list\"\n        };\n        return (\n          <div>\n            <div {...loaderProps}>\n              <Loader />\n            </div>\n            <div {...viewProps}>\n              <Topbar {...topbarProps} />\n              <div {...mainProps}>\n                <ul {...listProps}>\n                  {this.state.results.map((result, i) => {\n                    if (i < (this.state.selectedIndex + this.increment)) {\n                      const listItemProps = {\n                          key: i\n                        },\n                        cardProps = {\n                          className: `card ${i === this.state.selectedIndex ? \"selected\" : \"\"}`,\n                          onClick: () => window.open(result.link)\n                        },\n                        infoProps = {\n                          className: \"info wrapText\",\n                          children: `${i} of ${this.state.results.length}`\n                        },\n                        sourceProps = {\n                          className: \"source wrapText\",\n                          children: `${result.source}: ${result.author}`\n                        },\n                        scoreProps = {\n                          className: \"score wrapText\",\n                          children: result.score.toLocaleString(\"en-US\")\n                        },\n                        dateProps = {\n                          className: \"date wrapText\",\n                          children: `${(((new Date() - result.date)) / 36e5).toLocaleString(\"en-US\")} hours (${result.date.toLocaleString(\"en-US\")})`\n                        },\n                        textProps = {\n                          className: \"text multiWrap\",\n                          dangerouslySetInnerHTML: {\n                            __html: `${result.title}`\n                          }\n                        }\n                      return (\n                        <li {...listItemProps}>\n                          <div {...cardProps}>\n                            <div {...infoProps} />\n                            <div {...sourceProps} />\n                            <div {...scoreProps} />\n                            <div {...dateProps} />\n                            <div {...textProps} />\n                          </div>\n                        </li>\n                      );\n                    }\n                  })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        );\n  }\n\n  scrollTo() {\n    window.scrollTo(0, Math.max(0, this.state.selectedIndex * (126) - 200));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}