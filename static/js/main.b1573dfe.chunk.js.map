{"version":3,"sources":["Loader.module.css","Topbar.module.css","QueryResource.js","Loader.js","Topbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","QueryResource","addItem","src","title","link","author","score","date","misc","createItem","this","queries","SourceHackerNews","SourceGithubTrending","SourceDevto","SourceSubreddit","source","miscellaneous","Promise","all","map","x","a","query","response","process","add","take","promises","data","forEach","storyID","i","push","axios","get","storyResponses","scoreTotal","reduce","gross","storyResponse","url","by","Date","time","language","prettyName","currentPeriodStars","setHours","info","name","description","stars","subreddit","children","ups","downs","item","created","public_reactions_count","user","created_at","tags","Loader","className","styles","loader","React","Component","Topbar","componentProps","component","props","App","onKeyDown","bind","onScroll","scrollTo","resource","increment","state","results","selectedIndex","document","addEventListener","then","arrays","flatten","array","concat","setState","sort","y","catch","err","console","error","event","key","shuffle","Math","min","length","max","window","open","body","html","documentElement","documentHeight","scrollHeight","offsetHeight","clientHeight","scrollY","innerHeight","temporaryValue","randomIndex","currentIndex","floor","random","mainProps","topbarLayoutProps","sortProps","onClick","dateProps","randomProps","topbarProps","listProps","style","position","width","result","listItemProps","cardProps","infoProps","sourceProps","scoreProps","toLocaleString","textProps","dangerouslySetInnerHTML","__html","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b1573dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3MXRD\",\"spin\":\"Loader_spin__35Z7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Topbar_component__1EqBD\"};","import axios from 'axios';\n\nexport default class QueryResource {\n    constructor() {\n        const addItem = (src, title, link, author, score, date, misc) => this.createItem(src, title, link, author, score, date, misc);\n        this.queries = [\n            new SourceHackerNews(addItem, 100),\n            new SourceGithubTrending(addItem),\n            new SourceGithubTrending(addItem, \"javascript\"),\n            new SourceGithubTrending(addItem, \"typescript\"),\n            new SourceGithubTrending(addItem, \"shell\"),\n            new SourceGithubTrending(addItem, \"go\"),\n            new SourceGithubTrending(addItem, \"css\"),\n            new SourceGithubTrending(addItem, \"html\"),\n            new SourceGithubTrending(addItem, \"c%23\", \"c#\"),\n            new SourceGithubTrending(addItem, \"c%2B%2B\", \"c++\"),\n            new SourceDevto(addItem),\n            new SourceSubreddit(addItem, \"r/appideas\"),\n            new SourceSubreddit(addItem, \"r/bash\"),\n            new SourceSubreddit(addItem, \"r/bashtricks\"),\n            new SourceSubreddit(addItem, \"r/commandline\"),\n            new SourceSubreddit(addItem, \"r/coolgithubprojects\"),\n            new SourceSubreddit(addItem, \"r/cpp\"),\n            new SourceSubreddit(addItem, \"r/csharp\"),\n            new SourceSubreddit(addItem, \"r/css\"),\n            new SourceSubreddit(addItem, \"r/dataisbeautiful\"),\n            new SourceSubreddit(addItem, \"r/datascience\"),\n            new SourceSubreddit(addItem, \"r/datasets\"),\n            new SourceSubreddit(addItem, \"r/docker\"),\n            new SourceSubreddit(addItem, \"r/dotnet\"),\n            new SourceSubreddit(addItem, \"r/lightbulb\"),\n            new SourceSubreddit(addItem, \"r/linux\"),\n            new SourceSubreddit(addItem, \"r/mlpapers\"),\n            new SourceSubreddit(addItem, \"r/node\"),\n            new SourceSubreddit(addItem, \"r/programming\"),\n            new SourceSubreddit(addItem, \"r/python\"),\n            new SourceSubreddit(addItem, \"r/raspberry_pi\"),\n            new SourceSubreddit(addItem, \"r/raspberry_pi_projects\"),\n            new SourceSubreddit(addItem, \"r/reactjs\"),\n            new SourceSubreddit(addItem, \"r/sideproject\"),\n            new SourceSubreddit(addItem, \"r/somebodymakethis\"),\n            new SourceSubreddit(addItem, \"r/startup_ideas\"),\n            new SourceSubreddit(addItem, \"r/startups\"),\n            new SourceSubreddit(addItem, \"r/typescript\"),\n            new SourceSubreddit(addItem, \"r/vim\"),\n            new SourceSubreddit(addItem, \"r/vscode\"),\n        ];\n    }\n    \n    createItem(source, title, link, author, score, date, miscellaneous = \"\") {\n        return {\n            source: source,\n            title: title,\n            link: link,\n            author: author,\n            score: score,\n            date: date,\n            miscellaneous: miscellaneous\n        };\n    }\n\n    async query() {\n        return await Promise.all(this.queries.map(async (x) => {\n            const response = await x.query();\n            return await x.process(response);\n        }));\n    }\n}\n\nclass SourceHackerNews {\n    constructor(add, take) {\n        this.add = add;\n        this.take = take;\n    }\n\n    async process(response) {\n        const promises = [];\n        response.data.forEach((storyID, i) => {\n            if (i < this.take) {\n                promises.push(axios.get(`https://hacker-news.firebaseio.com/v0/item/${storyID}.json`));\n            }\n        });\n        const storyResponses = await Promise.all(promises);\n        const scoreTotal = storyResponses.reduce((gross, x) => gross + x.data.score, 0);\n        return storyResponses.map(storyResponse => {\n            return this.add(\n                \"hn\",\n                storyResponse.data.title,\n                storyResponse.data.url,\n                storyResponse.data.by, \n                storyResponse.data.score / scoreTotal, \n                new Date(storyResponse.data.time * 1e3), \n                `<br/>score: ${storyResponse.data.score}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(\"https://hacker-news.firebaseio.com/v0/topstories.json\");\n    }\n}\n\nclass SourceGithubTrending {\n    constructor(add, language = null, prettyName = null) {\n        this.add = add;\n        this.language = language;\n        this.prettyName = prettyName;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.reduce((gross, x) => gross + x.currentPeriodStars, 0);\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.map((info) => {\n            return this.add(\n                `gh/${this.prettyName ?? this.language ?? \"\"}`, \n                info.name,\n                info.url,\n                info.author,\n                info.currentPeriodStars / scoreTotal,\n                date,\n                `<br/>language: ${info.language}<br/>description: ${info.description}<br/>score: ${info.stars}`);\n        });\n    }\n\n    async query() {\n        return await (this.language ? axios.get(`https://ghapi.huchen.dev/repositories?since=daily&language=${this.language}`) : axios.get(\"https://ghapi.huchen.dev/repositories?since=daily\"));\n    }\n}\n\nclass SourceSubreddit {\n    constructor(add, subreddit) {\n        this.add = add;\n        this.subreddit = subreddit;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.data.children.reduce((gross, x) => gross + (x.data.ups - x.data.downs), 0);\n        return response.data.data.children.map(item => {\n            return this.add(\n                this.subreddit,\n                item.data.title,\n                item.data.url,\n                item.data.author,\n                (item.data.ups - item.data.downs) / scoreTotal, \n                new Date((item.data.created - 8 * 60 * 60) * 1e3), \n                `<br/>score: ${(item.data.ups - item.data.downs)}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://www.reddit.com/${this.subreddit}.json?limit=25`);\n    }\n}\n\nclass SourceDevto {\n    constructor(add) {\n        this.add = add;\n    }\n\n    async process(response) {\n        const scoreTotal = response.data.reduce((gross, x) => gross + x.public_reactions_count, 0);\n        return response.data.map(item => {\n            return this.add(\n                \"devto\", \n                item.title, \n                item.url, \n                item.user.name, \n                item.public_reactions_count / scoreTotal,\n                new Date(item.created_at),\n                `<br/>tags: ${item.tags}<br/>description: ${item.description}<br/>score: ${item.public_reactions_count}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(\"https://dev.to/api/articles\");\n    }\n}","import React from 'react';\nimport styles from './Loader.module.css';\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <div className={styles.loader}/>\n        );\n    }\n}","import React from 'react';\nimport styles from './Topbar.module.css';\n\nexport default class Topbar extends React.Component {\n    render() {\n        const componentProps = {\n            className: styles.component,\n            children: this.props.children\n        }\n        return (\n            <div {...componentProps}/>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport QueryResource from './QueryResource';\nimport Loader from './Loader';\nimport Topbar from './Topbar';\n\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.onKeyDown = this.onKeyDown.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.resource = new QueryResource();\n      this.increment = 15;\n      this.state = {\n        results: [],\n        selectedIndex: -1\n      };\n  }\n\n  componentDidMount() {\n      document.addEventListener(\"keydown\", this.onKeyDown);\n      document.addEventListener(\"scroll\", this.onScroll);\n      this.resource.query()\n        .then(arrays => {\n          let flatten = [];\n          arrays.forEach(array => {\n            flatten = flatten.concat(array);\n          });\n          this.setState({\n            results: flatten.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          })\n        })\n        .catch(err => console.error(err));\n  }\n\n  onKeyDown(event) {\n    switch (event.key) {\n      case \"s\":\n          // sort score descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"d\":\n          // sort date descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.date <= y.date) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"r\":\n          // sort randomly\n          this.setState(state => ({\n            results: this.shuffle(state.results),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"i\":\n          this.setState({selectedIndex: 0}, () => this.scrollTo());\n          break;\n      case \"ArrowDown\":\n      case \"j\":\n          this.setState(state => ({selectedIndex: Math.min(state.selectedIndex + 1, state.results.length - 1)}), () => this.scrollTo());\n          break;\n      case \"ArrowUp\":\n      case \"k\":\n          this.setState(state => ({selectedIndex: Math.max(0, state.selectedIndex - 1)}), () => this.scrollTo());\n          break;\n      case \"Enter\":\n          if (this.state.selectedIndex > -1) {\n              window.open(this.state.results[this.state.selectedIndex].link);\n          }\n          break;\n      default:\n          break;\n    }\n  }\n\n  onScroll(event) {\n      const body = document.body,\n          html = document.documentElement,\n          documentHeight = Math.max( body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n      if (window.scrollY >= documentHeight - window.innerHeight) {\n          this.setState(state => ({selectedIndex: state.selectedIndex + this.increment}));\n      }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n      const mainProps = {\n          className: \"main\"\n        },\n        topbarLayoutProps = {\n          className: \"topbarLayout\"\n        },\n        sortProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"s\" })\n        },\n        dateProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"d\" })\n        },\n        randomProps = {\n          className: \"button\",\n          onClick: () => this.onKeyDown({ key: \"r\" })\n        },\n        topbarProps = {\n          children: (\n            <div {...topbarLayoutProps}>\n              <button {...sortProps}>Score</button>\n              <button {...dateProps}>Date</button>\n              <button {...randomProps}>Random</button>\n            </div>\n          )\n        },\n        listProps = {\n          className: \"list\"\n        };\n        return (\n          <div>\n            {this.state.results.length === 0 ? <Loader /> : \n              <div style={{position: \"absolute\", width: \"100%\"}}>\n                <Topbar {...topbarProps} />\n                <div {...mainProps}>\n                  <ul {...listProps}>\n                    {this.state.results.map((result, i) => {\n                      if (i < (this.state.selectedIndex + this.increment)) {\n                        const listItemProps = {\n                            key: i\n                          },\n                          cardProps = {\n                            className: `card ${i === this.state.selectedIndex ? \"selected\" : \"\"}`,\n                            onClick: () => window.open(result.link)\n                          },\n                          infoProps = {\n                            className: \"info wrapText\",\n                            children: `${i} of ${this.state.results.length}`\n                          },\n                          sourceProps = {\n                            className: \"source wrapText\",\n                            children: `${result.source}: ${result.author}`\n                          },\n                          scoreProps = {\n                            className: \"score wrapText\",\n                            children: result.score.toLocaleString(\"en-US\")\n                          },\n                          dateProps = {\n                            className: \"date wrapText\",\n                            children: `${(((new Date() - result.date)) / 36e5).toLocaleString(\"en-US\")} hours (${result.date.toLocaleString(\"en-US\")})`\n                          },\n                          textProps = {\n                            className: \"text wrapText\",\n                            dangerouslySetInnerHTML: {\n                              __html: `${result.title}`\n                            }\n                          }\n                        return (\n                          <li {...listItemProps}>\n                            <div {...cardProps}>\n                              <div {...infoProps} />\n                              <div {...sourceProps} />\n                              <div {...scoreProps} />\n                              <div {...dateProps} />\n                              <div {...textProps} />\n                            </div>\n                          </li>\n                        );\n                      }\n                    })}\n                  </ul>\n                </div>\n              </div>\n            }\n          </div>\n        );\n  }\n\n  scrollTo() {\n    window.scrollTo(0, Math.max(0, this.state.selectedIndex * (126) - 200));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}