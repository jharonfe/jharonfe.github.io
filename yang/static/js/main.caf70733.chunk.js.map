{"version":3,"sources":["QueryResource.js","Theme.js","Loader.js","Topbar.jsx","App.js","serviceWorker.js","index.js"],"names":["QueryResource","this","queries","SourceDevto","SourceHackerNews","SourceGithubTrending","SourceStackExchange","SourceSubreddit","Promise","allSettled","map","x","a","query","response","process","createItem","source","title","link","author","score","date","miscellaneous","zScore","arr","mean","reduce","gross","length","stdev","Math","sqrt","pow","b","path","take","promises","data","forEach","storyID","i","push","axios","get","all","storyResponses","storyResponse","url","id","by","Date","time","language","prettyName","currentPeriodStars","setHours","info","name","description","stars","subreddit","children","ups","downs","item","created","public_reactions_count","user","created_at","tags","site","items","view_count","owner","display_name","creation_date","Theme","Object","freeze","backgroundColor","textColor","highlightColor","SpinAnimation","keyframes","StyledLoader","styled","div","Loader","React","Component","StyledTopbar","Topbar","props","StyledBody","StyledList","ul","StyledCard","li","isSelected","StyledTopbarLayout","StyledButton","button","StyledTextWrap","StyledCardInfo","StyledCardScore","StyledCardDate","StyledCardSource","StyledCardBody","StyledDisplayContainer","isVisible","StyledView","App","onKeyDown","bind","onScroll","scrollTo","resource","increment","state","results","selectedIndex","document","addEventListener","then","flatten","result","status","concat","value","setState","filter","sort","y","catch","err","console","error","event","key","shuffle","min","max","window","open","body","html","documentElement","documentHeight","scrollHeight","offsetHeight","clientHeight","scrollY","innerHeight","array","temporaryValue","randomIndex","currentIndex","floor","random","loaderProps","viewProps","sortProps","onClick","dateProps","randomProps","topbarProps","cardProps","infoProps","sourceProps","scoreProps","toLocaleString","textProps","dangerouslySetInnerHTML","__html","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.caf70733.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class QueryResource {\n    constructor() {\n        this.queries = [\n            new SourceDevto(200),\n            new SourceHackerNews(\"topstories\", 300),\n            new SourceHackerNews(\"askstories\", 200),\n            new SourceHackerNews(\"showstories\", 200),\n            new SourceGithubTrending(),\n            new SourceGithubTrending(\"javascript\"),\n            new SourceGithubTrending(\"typescript\"),\n            new SourceGithubTrending(\"shell\"),\n            new SourceGithubTrending(\"go\"),\n            new SourceGithubTrending(\"css\"),\n            new SourceGithubTrending(\"html\"),\n            new SourceGithubTrending(\"c%23\", \"c#\"),\n            new SourceGithubTrending(\"c%2B%2B\", \"c++\"),\n            new SourceStackExchange(\"stackoverflow\"),\n            new SourceStackExchange(\"serverfault\"),\n            new SourceStackExchange(\"superuser\"),\n            new SourceStackExchange(\"webapps\"),\n            new SourceStackExchange(\"askubuntu\"),\n            new SourceStackExchange(\"unix\"),\n            new SourceStackExchange(\"stats\"),\n            new SourceStackExchange(\"opendata\"),\n            new SourceStackExchange(\"chess\"),\n            new SourceStackExchange(\"dsp\"),\n            new SourceStackExchange(\"parenting\"),\n            new SourceStackExchange(\"quant\"),\n            new SourceSubreddit(\"r/appideas\"),\n            new SourceSubreddit(\"r/bash\"),\n            new SourceSubreddit(\"r/bashtricks\"),\n            new SourceSubreddit(\"r/commandline\"),\n            new SourceSubreddit(\"r/coolgithubprojects\"),\n            new SourceSubreddit(\"r/cpp\"),\n            new SourceSubreddit(\"r/csharp\"),\n            new SourceSubreddit(\"r/css\"),\n            new SourceSubreddit(\"r/dataisbeautiful\"),\n            new SourceSubreddit(\"r/datascience\"),\n            new SourceSubreddit(\"r/datasets\"),\n            new SourceSubreddit(\"r/docker\"),\n            new SourceSubreddit(\"r/dotnet\"),\n            new SourceSubreddit(\"r/lightbulb\"),\n            new SourceSubreddit(\"r/linux\"),\n            new SourceSubreddit(\"r/mlpapers\"),\n            new SourceSubreddit(\"r/node\"),\n            new SourceSubreddit(\"r/programming\"),\n            new SourceSubreddit(\"r/python\"),\n            new SourceSubreddit(\"r/raspberry_pi\"),\n            new SourceSubreddit(\"r/raspberry_pi_projects\"),\n            new SourceSubreddit(\"r/reactjs\"),\n            new SourceSubreddit(\"r/sideproject\"),\n            new SourceSubreddit(\"r/somebodymakethis\"),\n            new SourceSubreddit(\"r/startup_ideas\"),\n            new SourceSubreddit(\"r/startups\"),\n            new SourceSubreddit(\"r/typescript\"),\n            new SourceSubreddit(\"r/vim\"),\n            new SourceSubreddit(\"r/vscode\"),\n        ];\n    }\n\n    async query() {\n        return await Promise.allSettled(this.queries.map(async (x) => {\n            const response = await x.query();\n            return await x.process(response);\n        }));\n    }\n}\n\nfunction createItem(source, title, link, author, score, date, miscellaneous = \"\") {\n    return {\n        source: source,\n        title: title,\n        link: link,\n        author: author,\n        score: score,\n        date: date,\n        miscellaneous: miscellaneous\n    };\n}\n\nfunction zScore(arr) {\n    const mean = arr.reduce((gross, x) => gross + x, 0) / arr.length;\n    const stdev = Math.sqrt(arr.map(x => Math.pow(x - mean , 2)).reduce((a, b) =>  a + b) / arr.length);\n    return [mean, stdev];\n}\n\nclass SourceHackerNews {\n    constructor(path, take) {\n        this.path = path;\n        this.take = take;\n    }\n\n    async process(response) {\n        const promises = [];\n        response.data.forEach((storyID, i) => {\n            if (i < this.take) {\n                promises.push(axios.get(`https://hacker-news.firebaseio.com/v0/item/${storyID}.json`));\n            }\n        });\n        const storyResponses = await Promise.all(promises);\n        const [mean, stdev] = zScore(storyResponses.map(x => x.data.score));\n        return storyResponses.map(storyResponse => {\n            return createItem(\n                `hn/${this.path}`,\n                storyResponse.data.title,\n                storyResponse.data.url ?? `https://news.ycombinator.com/item?id=${storyResponse.data.id}`,\n                storyResponse.data.by, \n                (storyResponse.data.score - mean) / stdev, \n                new Date(storyResponse.data.time * 1e3), \n                `<br/>score: ${storyResponse.data.score}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://hacker-news.firebaseio.com/v0/${this.path}.json`);\n    }\n}\n\nclass SourceGithubTrending {\n    constructor(language = null, prettyName = null) {\n        this.language = language;\n        this.prettyName = prettyName;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.map(x => x.currentPeriodStars));\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return response.data.map((info) => {\n            return createItem(\n                `gh/${this.prettyName ?? this.language ?? \"\"}`, \n                info.name,\n                info.url,\n                info.author,\n                (info.currentPeriodStars - mean) / stdev,\n                date,\n                `<br/>language: ${info.language}<br/>description: ${info.description}<br/>score: ${info.stars}`);\n        });\n    }\n\n    async query() {\n        return await (this.language ? axios.get(`https://ghapi.huchen.dev/repositories?since=daily&language=${this.language}`) : axios.get(\"https://ghapi.huchen.dev/repositories?since=daily\"));\n    }\n}\n\nclass SourceSubreddit {\n    constructor(subreddit) {\n        this.subreddit = subreddit;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.data.children.map(x => x.data.ups - x.data.downs));\n        return response.data.data.children.map(item => {\n            return createItem(\n                this.subreddit,\n                item.data.title,\n                item.data.url,\n                item.data.author,\n                ((item.data.ups - item.data.downs) - mean) / stdev, \n                new Date((item.data.created - 8 * 60 * 60) * 1e3), \n                `<br/>score: ${(item.data.ups - item.data.downs)}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://www.reddit.com/${this.subreddit}.json?limit=25`);\n    }\n}\n\nclass SourceDevto {\n    constructor(take) {\n        this.take = take;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.map(x => x.public_reactions_count));\n        return response.data.map(item => {\n            return createItem(\n                \"devto\", \n                item.title, \n                item.url, \n                item.user.name, \n                (item.public_reactions_count - mean) / stdev,\n                new Date(item.created_at),\n                `<br/>tags: ${item.tags}<br/>description: ${item.description}<br/>score: ${item.public_reactions_count}`);\n        });\n    }\n\n    async query() {\n        return await axios.get(`https://dev.to/api/articles?per_page=${this.take}`);\n    }\n}\n\nclass SourceStackExchange {\n    constructor(site) {\n        this.site = site;\n    }\n\n    async process(response) {\n        const [mean, stdev] = zScore(response.data.items.map(x => x.view_count));\n        return response.data.items.map(item => {\n            return createItem(\n                `stack/${this.site}`,\n                item.title,\n                item.link,\n                item.owner.display_name,\n                (item.view_count - mean) / stdev,\n                new Date(item.creation_date * 1e3));\n        })\n    }\n\n    async query() {\n        return await axios.get(`https://api.stackexchange.com/2.2/questions?sort=hot&site=${this.site}`);\n    }\n}","export const Theme = Object.freeze({\n    backgroundColor: \"rgb(31, 31, 31)\",\n    textColor: \"rgb(223, 223, 223)\",\n    highlightColor: \"rgba(0, 255, 65, 0.5)\"\n});","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Theme } from './Theme';\n\nconst size = \"16px\";\nconst SpinAnimation = keyframes`\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    `,\n    StyledLoader = styled.div`\n        border: ${size} solid rgb(63, 63, 63);\n        border-top: ${size} solid ${Theme.highlightColor};\n        border-radius: 50%;\n        width: calc(4 * ${size});\n        height: calc(4 * ${size});\n        animation: ${SpinAnimation} 2s linear infinite;\n        position: absolute;\n        top: calc(50% - 2 * ${size});\n        left: calc(50% - 2 * ${size});\n    `;\n\nexport default class Loader extends React.Component {\n    render() {\n        return (\n            <StyledLoader/>\n        );\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Theme } from './Theme';\n\nconst StyledTopbar = styled.div`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 60px;\n    border-bottom: 1px solid ${Theme.textColor};\n    background-color: ${Theme.backgroundColor};\n    z-index: 1;\n`;\n\nexport default class Topbar extends React.Component {\n    render() {\n        return (\n            <StyledTopbar>\n                {this.props.children}\n            </StyledTopbar>\n        );\n    }\n}","import React from 'react';\nimport QueryResource from './QueryResource';\nimport Loader from './Loader';\nimport Topbar from './Topbar';\nimport styled from 'styled-components';\nimport { Theme } from './Theme';\n\nconst StyledBody = styled.div`\n        position: relative;\n        top: 60px;\n        @media only screen and (min-width: 414px) and (max-width: 767px) {\n            margin: 0px 0px;\n        }\n        @media only screen and (min-width: 768px) {\n            margin: 0px 150px;\n        }\n    `,\n    StyledList = styled.ul`\n        list-style-type: none;\n        padding: 0px;\n    `,\n    StyledCard = styled.li`\n        height: 120px;\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: repeat(5, 1fr);\n        grid-template-areas: \n            \"info score\"\n            \"body body\"\n            \"body body\"\n            \"body body\"\n            \"source date\";\n        border: 1px solid ${Theme.textColor};\n        margin: 4px auto;\n        font-size: 0.8em;\n        border-radius: 4px;\n        max-width: 1000px;\n        background-color: ${props => props.isSelected ? Theme.highlightColor : Theme.backgroundColor}\n    `,\n    StyledTopbarLayout = styled.div`\n        display: flex;\n        flex-flow: row;\n        align-items: center;\n        justify-content: space-evenly;\n    `,\n    StyledButton = styled.button`\n        font-family: 'Roboto Mono', monospace;\n        padding: 0px;\n        height: 40px;\n        width: 100px;\n        margin: 10px 0px;\n        color: ${Theme.textColor};\n        border: 1px solid ${Theme.textColor};\n        background-color: ${Theme.highlightColor};\n        border-radius: 4px;\n    `,\n    StyledTextWrap = styled.div`\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    `,\n    StyledCardInfo = styled(StyledTextWrap)`\n        grid-area: info;\n        margin: 0px 8px;\n    `,\n    StyledCardScore = styled(StyledTextWrap)`\n        grid-area: score;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    StyledCardDate = styled(StyledTextWrap)`\n        grid-area: date;\n        text-align: right;\n        margin: 0px 8px;\n    `,\n    StyledCardSource = styled(StyledTextWrap)`\n        grid-area: source;\n        margin: 0px 8px;\n    `,\n    StyledCardBody = styled.div`\n        grid-area: body;\n        margin: 0px 8px;\n        text-align: center;\n        padding: 30px 0px;\n        padding: 10px 20px;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    `,\n    StyledDisplayContainer = styled.div`\n        display: ${props => props.isVisible ? \"block\" : \"none\"};\n    `,\n    StyledView = styled(StyledDisplayContainer)`\n        position: absolute;\n        width: 100%;\n    `;\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.onKeyDown = this.onKeyDown.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.resource = new QueryResource();\n      this.increment = 15;\n      this.state = {\n        results: [],\n        selectedIndex: -1\n      };\n  }\n\n  componentDidMount() {\n      document.addEventListener(\"keydown\", this.onKeyDown);\n      document.addEventListener(\"scroll\", this.onScroll);\n      this.resource.query()\n        .then(results => {\n          let flatten = [];\n          results.forEach(result => {\n            if (result.status === \"fulfilled\") {\n              flatten = flatten.concat(result.value);\n            }\n          });\n          const maxHours = 1 * 24;\n          this.setState({\n            results: flatten.filter(x => ((new Date() - x.date) / 36e5) <= maxHours).sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          })\n        })\n        .catch(err => console.error(err));\n  }\n\n  onKeyDown(event) {\n    switch (event.key) {\n      case \"s\":\n          // sort score descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.score <= y.score) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"d\":\n          // sort date descending\n          this.setState(state => ({\n            results: state.results.sort((x, y) => (x.date <= y.date) ? 1 : -1),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"r\":\n          // sort randomly\n          this.setState(state => ({\n            results: this.shuffle(state.results),\n            selectedIndex: 0\n          }), () => this.scrollTo());\n          break;\n      case \"i\":\n          this.setState({selectedIndex: 0}, () => this.scrollTo());\n          break;\n      case \"ArrowDown\":\n      case \"j\":\n          this.setState(state => ({selectedIndex: Math.min(state.selectedIndex + 1, state.results.length - 1)}), () => this.scrollTo());\n          break;\n      case \"ArrowUp\":\n      case \"k\":\n          this.setState(state => ({selectedIndex: Math.max(0, state.selectedIndex - 1)}), () => this.scrollTo());\n          break;\n      case \"Enter\":\n          if (this.state.selectedIndex > -1) {\n              window.open(this.state.results[this.state.selectedIndex].link);\n          }\n          break;\n      default:\n          break;\n    }\n  }\n\n  onScroll(event) {\n      const body = document.body,\n          html = document.documentElement,\n          documentHeight = Math.max( body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n      if (window.scrollY >= documentHeight - window.innerHeight) {\n          this.setState(state => ({selectedIndex: state.selectedIndex + this.increment}));\n      }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n      const loaderProps = {\n          isVisible: this.state.results.length === 0\n        },\n        viewProps = {\n          isVisible: !(this.state.results.length === 0)\n        },\n        sortProps = {\n          onClick: () => this.onKeyDown({ key: \"s\" })\n        },\n        dateProps = {\n          onClick: () => this.onKeyDown({ key: \"d\" })\n        },\n        randomProps = {\n          onClick: () => this.onKeyDown({ key: \"r\" })\n        },\n        topbarProps = {\n          children: (\n            <StyledTopbarLayout>\n              <StyledButton {...sortProps}>Score</StyledButton>\n              <StyledButton {...dateProps}>Date</StyledButton>\n              <StyledButton {...randomProps}>Random</StyledButton>\n            </StyledTopbarLayout>\n          )\n        };\n        return (\n          <div>\n            <StyledDisplayContainer {...loaderProps}>\n              <Loader />\n            </StyledDisplayContainer>\n            <StyledView {...viewProps}>\n              <Topbar {...topbarProps} />\n              <StyledBody>\n                <StyledList>\n                  {this.state.results.map((result, i) => {\n                    if (i < (this.state.selectedIndex + this.increment)) {\n                      const cardProps = {\n                          key: i,\n                          isSelected: i === this.state.selectedIndex,\n                          onClick: () => window.open(result.link)\n                        },\n                        infoProps = {\n                          children: `${i} of ${this.state.results.length}`\n                        },\n                        sourceProps = {\n                          children: `${result.source}: ${result.author}`\n                        },\n                        scoreProps = {\n                          children: result.score.toLocaleString(\"en-US\")\n                        },\n                        dateProps = {\n                          children: `${(((new Date() - result.date)) / 36e5).toLocaleString(\"en-US\")} hours (${result.date.toLocaleString(\"en-US\")})`\n                        },\n                        textProps = {\n                          dangerouslySetInnerHTML: {\n                            __html: `${result.title}`\n                          }\n                        }\n                      return (\n                        <StyledCard {...cardProps}>\n                          <StyledCardInfo {...infoProps} />\n                          <StyledCardSource {...sourceProps} />\n                          <StyledCardScore {...scoreProps} />\n                          <StyledCardDate {...dateProps} />\n                          <StyledCardBody {...textProps} />\n                        </StyledCard>\n                      );\n                    }\n                  })}\n                </StyledList>\n              </StyledBody>\n            </StyledView>\n          </div>\n        );\n  }\n\n  scrollTo() {\n    window.scrollTo(0, Math.max(0, this.state.selectedIndex * (126) - 200));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}